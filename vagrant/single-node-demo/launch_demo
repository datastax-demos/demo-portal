#!/usr/bin/env python
import time

from launcher.create_logger import logger
from launcher.docker import stop_all, wait_for_image
from launcher.parse_options import options
from launcher.runner import run

from launcher.containers.dse import launch_dse, pull_dse
from launcher.containers.opscenter import launch_opscenter, configure_agents, pull_opscenter
from launcher.containers.coffice import launch_connected_office, pull_coffice
from launcher.containers.weather import launch_weather_sensors, pull_weather


def main():
    stop_all()

    if not options.localbuilds:
        pull_dse(options.localbuilds, wait=False)

        # ensure dse has a head start to be first
        time.sleep(5)

        pull_opscenter(options.localbuilds, wait=False)

        # ensure opscenter has a head start before the demos
        time.sleep(5)

        if options.demo == 'connected-office':
            pull_coffice(options.localbuilds, wait=False)
        elif options.demo == 'weather-sensors':
            pull_weather(options.localbuilds, wait=False)

    dse_container = None
    while True:
        wait_for_image('datastax-enterprise')
        dse_container = launch_dse(localbuilds=options.localbuilds,
                                   debug=options.debug,
                                   spark=True, hadoop=True,
                                   sharkserver=True, hiveserver=True)

        try:
            # check if the response has the ip property
            dse_container.ip
            break
        except:
            existing_networking = dse_container.stderr.split('.')[0].split()[-1]
            run('docker rm %s' % existing_networking)

    logger.info(dse_container)

    wait_for_image('opscenter')
    opscenter_container = launch_opscenter(localbuilds=options.localbuilds,
                                           debug=options.debug,
                                           cluster_ip=dse_container.ip)

    logger.info(opscenter_container)
    configure_agents(dse_container.container_id, opscenter_container.ip)

    if options.demo == 'connected-office':
        wait_for_image(options.demo)
        launch_connected_office(localbuilds=options.localbuilds,
                                debug=options.debug,
                                cluster_ip=dse_container.ip)

    elif options.demo == 'weather-sensors':
        wait_for_image(options.demo)
        launch_weather_sensors(localbuilds=options.localbuilds,
                               debug=options.debug,
                               cluster_ip=dse_container.ip)


if __name__ == '__main__':
    print main()
