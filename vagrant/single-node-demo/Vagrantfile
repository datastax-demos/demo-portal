# -*- mode: ruby -*-
# vi: set ft=ruby :

unless ENV['DATASTAX_USER'] &&
       ENV['DATASTAX_PASS'] &&
       ENV['AWS_ACCESS_KEY'] &&
       ENV['AWS_SECRET_KEY']

    print "The following environmental variables must be set before running this script:\n"
    print "\tDATASTAX_USER\n"
    print "\tDATASTAX_PASS\n"
    print "\tAWS_ACCESS_KEY\n"
    print "\tAWS_SECRET_KEY\n"
    exit
end

def gui_enabled?
  !ENV.fetch('GUI', '').empty?
end

unless ENV['USER_EMAIL']
    ENV['USER_EMAIL'] = "joaquin@datastax.com"
end

unless ENV['DEMO']
    ENV['DEMO'] = "weather_sensors"
end

unless ENV['TTL']
    ENV['TTL'] = "2"
end

unless ENV['PORT']
    ENV['PORT'] = "3000"
end

unless ENV['AWS_AZ']
    ENV['AWS_AZ'] = "us-east-1a"
end

unless ENV['DEMOS_WEB_GUI']
    ENV['DEMOS_WEB_GUI'] = "../.."
end

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.box = "ubuntu/trusty64"
    config.vm.synced_folder '.', '/vagrant', disabled: true
    config.vm.synced_folder ENV['DEMOS_WEB_GUI'],
                            "/home/vagrant/webapps/demos-web-gui",
                            create: true

    config.vm.provider "virtualbox" do |vb|
        vb.memory = 1024
        vb.cpus = 2
        vb.name = "DataStax Demo Machine"
    end

    config.vm.provider :aws do |aws, override|
        override.vm.box = "aws-dummy"
        override.ssh.username = "ubuntu"
        override.vm.synced_folder ENV['DEMOS_WEB_GUI'],
                                  "/home/ubuntu/webapps/demos-web-gui",
                                  type: "rsync"

        aws.access_key_id = ENV['AWS_ACCESS_KEY']
        aws.secret_access_key = ENV['AWS_SECRET_KEY']
        aws.region = "us-east-1"
        aws.availability_zone = ENV['AWS_AZ']
        aws.keypair_name = "joaquin.rightscale.sales"
        override.ssh.private_key_path = "~/.ssh/joaquin.rightscale.sales.key"

        # ubuntu 14.04 20140927 release
        aws.region_config "us-east-1" do |region|
            region.ami = "ami-d0ba0cb8"
        end

        aws.instance_type = "m3.large"
        aws.security_groups = ["demos-webgui-launcher", "dse", "demos-webapp"]

        require 'time'
        aws.tags = {
            'name' => ENV['DEMO'],
            'provisioner' => 'demos-web-gui-launcher',
            'email' => ENV['USER_EMAIL'],
            'launch_time' => Time.now.httpdate,
            'ttl' => ENV['TTL'],
            'app_port' => ENV['PORT'],
        }
    end

    config.vm.provision :shell, path: "bootstrap.sh", privileged: false
    config.vm.provision :shell, path: "install-docker.sh", privileged: true
    config.vm.provision :shell,
                        inline: "sudo webapps/demos-web-gui/vagrant/single-node-demo/launch_demo --demo "+ENV['DEMO'],
                        privileged: false

    # public facing ports
    config.vm.network :forwarded_port, host: 4040, guest: 4040
    config.vm.network :forwarded_port, host: 7080, guest: 7080
    config.vm.network :forwarded_port, host: 7081, guest: 7081
    config.vm.network :forwarded_port, host: 8012, guest: 8012
    config.vm.network :forwarded_port, host: 8983, guest: 8983
    config.vm.network :forwarded_port, host: 50030, guest: 50030
    config.vm.network :forwarded_port, host: 50060, guest: 50060
    config.vm.network :forwarded_port, host: 8888, guest: 8888

    # inter-node cassandra ports
    config.vm.network :forwarded_port, host: 7000, guest: 7000
    config.vm.network :forwarded_port, host: 7001, guest: 7001
    config.vm.network :forwarded_port, host: 7199, guest: 7199
    config.vm.network :forwarded_port, host: 9042, guest: 9042
    config.vm.network :forwarded_port, host: 9160, guest: 9160

    # inter-node dse ports
    config.vm.network :forwarded_port, host: 7077, guest: 7077
    config.vm.network :forwarded_port, host: 8984, guest: 8984
    config.vm.network :forwarded_port, host: 9290, guest: 9290
    config.vm.network :forwarded_port, host: 10000, guest: 10000

    # inter-node opscenter ports
    config.vm.network :forwarded_port, host: 50031, guest: 50031
    config.vm.network :forwarded_port, host: 61620, guest: 61620
    config.vm.network :forwarded_port, host: 61621, guest: 61621

    config.vm.box_check_update = true
    config.vm.post_up_message = "Demo Box Started!"
end
